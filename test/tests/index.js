module.exports = [
	[
		[
			[2048, '2.0K'],
		],
		{base: 1024},
	],
	[
		[
			[2000, '2.000K'],
		],
		{digits: 3},
	],
	[
		[
			[2000, '2.0Kilo'],
		],
		{prefix: ['', 'Kilo']},
	],
	[
		[
			[0.02, '20milli'],
		],
		{prefix: {[-1]: 'milli', digits: 0}},
	],
	[
		[
			[Math.pow(10, -11), '10p'],
			[Math.pow(10, -8), '10n'],
			[0.00001, '10Î¼'],
			[0.1, '100m'],
			[0, '0'],
			[1, '1'],
			[2, '2'],
			[999, '999'],
			[1000, '1.0K'],
			[999940, '999.9K'],
			[999950, '1.0M'],
			[1040000, '1.0M'],
			[1050000, '1.1M'],
			[999940000, '999.9M'],
			[999951000, '1.0G'],
		],
		{},
	],
	[
		[
			[Math.pow(10, -11), '10p'],
			[Math.pow(10, -8), '10n'],
			[0.00001, '10Î¼'],
			[0.1, '100m'],
			[0, '0'],
			[1, '1'],
			[2, '2'],
			[999, '999'],
			[1000, '1K'],
			[999940, '1M'],
			[999950, '1M'],
			[1040000, '1M'],
			[1050000, '1M'],
			[999940000, '1G'],
			[999951000, '1G'],
		],
		{digits: 0},
	],
	[
		[
			[Math.pow(10, -11), '10p'],
			[Math.pow(10, -8), '10n'],
			[0.00001, '10Î¼'],
			[0.1, '100m'],
			[0, '0'],
			[1, '1'],
			[2, '2'],
			[999, '999'],
			[1000, '1K'],
			[999940, '1000K'],
			[999950, '1000K'],
			[1040000, '1M'],
			[1050000, '1M'],
			[999940000, '1000M'],
			[999951000, '1000M'],
		],
		{digits: -1},
	],
	[
		[
			[0, '0'],
			[1, '1'],
			[2, '2'],
			[999, '999'],
			[1000, '1.0K'],
			[999999, '999.9K'],
			[1000000, '1.0M'],
			[999999999, '999.9M'],
			[1000000000, '1.0G'],
		],
		{round: Math.floor},
	],
	[
		[
			[0, '0'],
			[1, '1'],
			[2, '2'],
			[999, '999'],
			[1000, '1.00K'],
			[999999, '999.99K'],
			[1000000, '1.00M'],
			[999999999, '999.99M'],
			[1000000000, '1.00G'],
		],
		{round: Math.floor, digits: 2},
	],
	[
		[
			[0, '0'],
			[1, '1'],
			[2, '2'],
			[Math.pow(2, 10) - 1, '1023'],
			[Math.pow(2, 10), '1.0K'],
			[Math.pow(2, 20), '1.0M'],
			[Math.pow(2, 30), '1.0G'],
			[Math.pow(2, 40), '1.0T'],
		],
		{base: 1024},
	],
	[
		[
			[5 * Math.pow(10000, 0), '5'],
			[5 * Math.pow(10000, 1), '5.0ðŸ˜€'],
			[5 * Math.pow(10000, 2), '5.0ðŸ¤£'],
			[5 * Math.pow(10000, 3), '5.0ðŸ˜Ž'],
			[5 * Math.pow(10000, 4), '5.0ðŸ¤”'],
		],
		{base: 10000, prefix: [...' ðŸ˜€ðŸ¤£ðŸ˜ŽðŸ¤”']},
	],
	[
		[
			[500, '5.0*10**2'],
			[50, '5.0*10**1'],
			[5, '5.0*10**0'],
			[0.5, '5.0*10**-1'],
			[0.05, '5.0*10**-2'],
			[0.005, '5.0*10**-3'],
		],
		{
			base: 10,
			digits: 1,
			output(size, significand, exponent) {
				return `${significand.toFixed(1)}*10**${exponent}`;
			},
		},
	],
];
